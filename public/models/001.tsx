/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 -t /Users/samuelfuller/Downloads/Assets/Head.001.glb 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Head001_1: THREE.SkinnedMesh
    Head001_2: THREE.SkinnedMesh
    Head001_3: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {
    Skin_: THREE.MeshStandardMaterial
    InsideMouth: THREE.MeshStandardMaterial
    Teeth: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Head.001.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh geometry={nodes.Head001_1.geometry} material={materials.Skin_} skeleton={nodes.Head001_1.skeleton} />
        <skinnedMesh geometry={nodes.Head001_2.geometry} material={materials.InsideMouth} skeleton={nodes.Head001_2.skeleton} />
        <skinnedMesh geometry={nodes.Head001_3.geometry} material={materials.Teeth} skeleton={nodes.Head001_3.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/Head.001.glb')
